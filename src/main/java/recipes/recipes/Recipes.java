package recipes.recipes;

import com.speedment.orm.core.entity.Entity;
import java.lang.Long;
import java.util.Objects;
import java.util.Optional;
import java.util.stream.Stream;
import javax.annotation.Generated;
import recipes.ratings.Ratings;
import recipes.ratings.RatingsManager;

/**
 * An interface representing an entity (for example, a row) in the Table 'project_1.recipes.recipes.recipes'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
@Entity(managerType = RecipesManager.class,
builderType = RecipesBuilder.class,
primaryKeyType = Long.class)
public interface Recipes {
    
    Long getId();
    
    String getName();
    
    String getText();
    
    default Stream<Ratings> ratingsesByRecipesId() {
        return RatingsManager.get()
                .stream().filter(ratings -> Objects.equals(this.getId(), ratings.getRecipesId()));
    }
    
    default Stream<Ratings> ratingses() {
        return ratingsesByRecipesId();
    }
    
    static RecipesBuilder builder() {
        return RecipesManager.get().builder();
    }
    
    default RecipesBuilder toBuilder() {
        return RecipesManager.get().toBuilder(this);
    }
    
    default String toJson() {
        return RecipesManager.get().toJson(this);
    }
    
    static Stream<Recipes> stream() {
        return RecipesManager.get().stream();
    }
    
    default Optional<Recipes> persist() {
        return RecipesManager.get().persist(this);
    }
    
    default Optional<Recipes> update() {
        return RecipesManager.get().update(this);
    }
    
    default Optional<Recipes> remove() {
        return RecipesManager.get().remove(this);
    }
}